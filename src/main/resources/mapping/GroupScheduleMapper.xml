<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oregonstate.snooze.dao.GroupScheduleMapper">
  <resultMap id="BaseResultMap" type="com.oregonstate.snooze.model.GroupSchedule">
    <id column="scheduleId" jdbcType="INTEGER" property="scheduleId" />
    <result column="groupId" jdbcType="INTEGER" property="groupId" />
    <result column="scheduleDes" jdbcType="VARCHAR" property="scheduleDes" javaType="java.util.Map"/>
    <result column="start" jdbcType="BIT" property="start" />
    <result column="end" jdbcType="BIT" property="end" />
    <result column="minHours" jdbcType="INTEGER" property="minHours" />
  </resultMap>
  <sql id="Base_Column_List">
    scheduleId, groupId, scheduleDes, start, end, minHours
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule_g
    where scheduleId = #{scheduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from schedule_g
    where scheduleId = #{scheduleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.oregonstate.snooze.model.GroupSchedule">
    insert into schedule_g (scheduleId, groupId, scheduleDes, 
      start, end, minHours)
    values (#{scheduleId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{scheduleDes,jdbcType=VARCHAR},
      #{start,jdbcType=BIT}, #{end,jdbcType=BIT}, #{minHours,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.oregonstate.snooze.model.GroupSchedule">
    insert into schedule_g
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        scheduleId,
      </if>
      <if test="groupId != null">
        groupId,
      </if>
      <if test="scheduleDes != null">
        scheduleDes,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="minHours != null">
        minHours,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="scheduleDes != null">
        #{scheduleDes,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        #{start,jdbcType=BIT},
      </if>
      <if test="end != null">
        #{end,jdbcType=BIT},
      </if>
      <if test="minHours != null">
        #{minHours,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oregonstate.snooze.model.GroupSchedule">
    update schedule_g
    <set>
      <if test="groupId != null">
        groupId = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="scheduleDes != null">
        scheduleDes = #{scheduleDes,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=BIT},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=BIT},
      </if>
      <if test="minHours != null">
        minHours = #{minHours,jdbcType=INTEGER},
      </if>
    </set>
    where scheduleId = #{scheduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oregonstate.snooze.model.GroupSchedule">
    update schedule_g
    set groupId = #{groupId,jdbcType=INTEGER},
      scheduleDes = #{scheduleDes,jdbcType=VARCHAR},
      start = #{start,jdbcType=BIT},
      end = #{end,jdbcType=BIT},
      minHours = #{minHours,jdbcType=INTEGER}
    where scheduleId = #{scheduleId,jdbcType=INTEGER}
  </update>
</mapper>